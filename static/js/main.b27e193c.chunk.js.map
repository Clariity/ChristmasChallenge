{"version":3,"sources":["Home.js","Stage1.js","Stage2.js","Stage3.js","Stage4.js","StageEnd.js","NotFound.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","className","onClick","history","push","useState","flipped","setFlipped","loaded","setLoaded","window","pushState","location","href","onpopstate","event","go","useEffect","Array","fill","setFlippedValue","index","value","newFlipped","map","key","isFlipped","number1","setNumber1","number2","setNumber2","number3","setNumber3","number4","setNumber4","number5","setNumber5","Handle","Slider","fire","text","Swal","title","checkNumber","Math","floor","random","toString","n","min","max","defaultValue","onChange","length","handle","dragging","restProps","prefixCls","overlay","visible","placement","style","ceil","target","setTarget","time","setTime","setTimeout","meter","DecibelMeter","document","addEventListener","level","getElementById","hits","listenTo","dB","percent","textContent","id","input","setInput","incorrect","setIncorrect","timerStarted","setTimerStarted","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","type","placeholder","path","exact","component","Home","Stage1","Stage2","Stage3","Stage4","StageEnd","NotFound","App","Routes","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b27e193c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport default withRouter((props) => {\r\n  return (\r\n    <div className='middle-page'>\r\n      <p>/\\</p>\r\n      <p>Tada</p>\r\n      <p>Merry Christmas</p>\r\n      <p>Welcome Human Being</p>\r\n      <p>Click the button below to start.</p>\r\n      <p>I hope you have a lot of time to spare...</p>\r\n      <button className='start-button' onClick={() => props.history.push('/stage1')}>Start</button>\r\n    </div>\r\n  )\r\n})","import React, { useState, useEffect } from 'react'\r\nimport ReactCardFlip from 'react-card-flip'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport default withRouter((props) => {\r\n  const [flipped, setFlipped] = useState([])\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  window.history.pushState(null, null, window.location.href);\r\n  window.onpopstate = function(event) {\r\n    window.history.go(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFlipped(Array(512).fill(false))\r\n    setLoaded(true)\r\n  }, [setFlipped])\r\n\r\n  const setFlippedValue = (index, value) => {\r\n    let newFlipped = Array(512).fill(false)\r\n    newFlipped[index] = value\r\n    setFlipped(newFlipped)\r\n  }\r\n\r\n  return (\r\n    <div className='stage1'>\r\n      {loaded && flipped.map((value, index) => {\r\n        return  <ReactCardFlip key={index} isFlipped={value}>\r\n                  <div className='card-front' onClick={() => setFlippedValue(index, true)}/>\r\n                  <div \r\n                    className={index === 313 ? 'card-back-correct' : 'card-back'} \r\n                    onClick={index === 313 \r\n                      ? () => props.history.push('/youAreNotGoingToGuessTheseURLsBTW') \r\n                      : () => setFlippedValue(index, false)\r\n                    }\r\n                  >\r\n                    {index === 313\r\n                      ? 'XKCD'\r\n                      : index + 1\r\n                    }\r\n                  </div>\r\n                </ReactCardFlip>\r\n      })}\r\n    </div>\r\n  )\r\n})","import React, { useState } from 'react'\r\nimport Slider from 'rc-slider';\r\nimport Tooltip from 'rc-tooltip';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport 'rc-slider/assets/index.css';\r\nimport 'rc-tooltip/assets/bootstrap.css';\r\n\r\nexport default withRouter((props) => {\r\n  const [number1, setNumber1] = useState('9')\r\n  const [number2, setNumber2] = useState('9')\r\n  const [number3, setNumber3] = useState('9')\r\n  const [number4, setNumber4] = useState('99')\r\n  const [number5, setNumber5] = useState('999999')\r\n  const Handle = Slider.Handle;\r\n\r\n  const handle = (props) => {\r\n    const { value, dragging, index, ...restProps } = props;\r\n    return (\r\n      <Tooltip\r\n        prefixCls=\"rc-slider-tooltip\"\r\n        overlay={value}\r\n        visible={dragging}\r\n        placement=\"top\"\r\n        key={index}\r\n      >\r\n        <Handle value={value} {...restProps} />\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  const fire = (text) => {\r\n    Swal.fire({\r\n      title: 'Nope',\r\n      text: text,\r\n    })\r\n  }\r\n\r\n  const checkNumber = (number1 === '5' && number2 === '7' && number3 === '4' && number4 === '65' && number5 === '221108')\r\n\r\n  return (\r\n    <div className='middle-page'>\r\n      <p>Please enter the number: 57465221108 below to verify that you are human</p>\r\n      <p>{number1 + number2 + number3 + number4 + number5}</p>\r\n      <div className='buttons'>\r\n        <button className='digit-button' onClick={() => setNumber1(Math.floor(Math.random() * 10).toString())}>1</button>\r\n        <button className='digit-button' onClick={() => setNumber2(Math.floor(Math.random() * 10).toString())}>2</button>\r\n        <button className='digit-button' onClick={() => setNumber3(Math.floor(Math.random() * 10).toString())}>3</button>\r\n        <button className='digit-button' onClick={() => fire(\"While you wait for the waiter, in that moment, do you not become the waiter?\")}>4</button>\r\n        <button className='digit-button' onClick={() => {\r\n          let n = Math.floor(Math.random() * 100)\r\n          setNumber4((n < 10) ? '0' + n.toString() : n.toString())\r\n        }}>5</button>\r\n        <button className='digit-button' onClick={() => fire(\"What happens if you get scared half to death twice?\")}>6</button>\r\n        <button className='digit-button' onClick={() => fire(\"I wonder if caterpillars know that they're going to be butterflies or do they just build the cocoon and be like wtf am I doing?\")}>7</button>\r\n        <button className='digit-button' onClick={() => fire(\"Do you ever realise that there was a moment when your mum or dad put you down as a baby and never picked you up again\")}>8</button>\r\n        <button className='digit-button' onClick={() => fire(\"Is there a synonym for synonym?\")}>9</button>\r\n        <button className='digit-button' onClick={() => fire(\"When you clean a vacuum you become the vacuum cleaner\")}>10</button>\r\n        <button className='digit-button' onClick={() => fire(\"If tomatoes are a fruit then ketchup is a smoothie\")}>11</button>\r\n      </div>\r\n      <Slider min={0} max={999999} defaultValue={500000} onChange={value => {\r\n        let n = value.toString()\r\n        while(n.length < 6)\r\n          n = '0' + n\r\n        setNumber5(n)\r\n      }} handle={handle}/>\r\n      {checkNumber\r\n        ? <button className='continue-button' onClick={() => props.history.push('/hoorayYouMadeItToTheFinalStageWellDone')}>Continue...</button>\r\n        : <div style={{\"height\": \"86px\"}}/>}\r\n    </div>\r\n  )\r\n})","import React, { useState, useEffect } from 'react'\r\nimport DecibelMeter from 'decibel-meter'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport default withRouter((props) => {\r\n  const [target, setTarget] = useState(-100 + Math.ceil(Math.random() * 40))\r\n  const [time, setTime] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTime(true);\r\n    }, 180000);\r\n  });\r\n\r\n  const meter = new DecibelMeter(Math.random());\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    const level = document.getElementById('db-level')\r\n    const hits = document.getElementById('hits')\r\n    let n = 0;\r\n    meter.listenTo(0, (dB, percent, value) => {\r\n      if ((Math.ceil(Math.random() * 5)) === 1)\r\n        level.textContent = `${Math.ceil(dB)} dB`\r\n      if (Math.ceil(dB) === target) {\r\n        hits.textContent = `Hits: ${n++}/500`\r\n        setTarget(-90 + Math.ceil(Math.random() * 50))\r\n      }\r\n    })\r\n  });\r\n  \r\n  return (\r\n    <div className='middle-page'>\r\n      Hit the dB levels below to complete the task\r\n      <p>Target: {target} dB</p>\r\n      <p id='db-level'>0 dB</p>\r\n      <p id='hits'>Hits: 0/500</p>\r\n      {time && \r\n        <>\r\n          <p>Yeah... you've just screamed at the screen for 3 minutes for no reason</p>\r\n          <button className='continue-button' onClick={() => props.history.push('/betYouWishYouWroteThatDown')}>Continue...</button>\r\n        </>}\r\n    </div>\r\n  )\r\n})","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport default withRouter((props) => {\r\n  const [input, setInput] = useState('')\r\n  const [incorrect, setIncorrect] = useState()\r\n  const [timerStarted, setTimerStarted] = useState(false)\r\n  const [timeLeft, setTimeLeft] = useState(20);\r\n\r\n  useEffect(() => {\r\n    if(timerStarted) {\r\n      if (!timeLeft) props.history.push('/stage1')\r\n      const intervalId = setInterval(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n      return () => clearInterval(intervalId);\r\n    }\r\n  }, [timerStarted, timeLeft, props.history]);\r\n\r\n  const checkPassword = () => {\r\n    if(input === 'the 4 digits displayed on the green card in the first task') {\r\n      props.history.push('/hereIsThePasswordYouFilthyAnimal')\r\n    } else {\r\n      setIncorrect(true)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    !timerStarted\r\n    ? <div className='middle-page'>\r\n        <p>GET READY!!!</p>\r\n        <p>You only have 20 seconds to enter the password on the next screen</p>\r\n        <button className='continue-button' onClick={() => setTimerStarted(true)}>Click here when ready...</button>\r\n      </div>\r\n    : <div className='middle-page'>\r\n        <p>{timeLeft}</p>\r\n        <p>Enter the password below:</p>\r\n        <p>Hint: The password is the 4 digits displayed on the green card in the first task</p>\r\n        <input className='text-input' type='text' value={input} onChange={event => setInput(event.target.value)} placeholder=\"Enter password here\"/>\r\n        <button className='continue-button' onClick={checkPassword}>Submit</button>\r\n        {incorrect && <p>NOPE... WRONG PASSWORD SUCKA</p>}\r\n      </div>\r\n  )\r\n})","import React from 'react'\r\n\r\nexport default () => {  \r\n  return (\r\n    <div className='middle-page'>\r\n      <p>Password is the URL, send me that</p>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className='middle-page'>\r\n      NICE TRY MELON, DO THE TASKS PROPERLY!\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport Stage1 from \"./Stage1\";\r\nimport Stage2 from \"./Stage2\";\r\nimport Stage3 from \"./Stage3\";\r\nimport Stage4 from \"./Stage4\";\r\nimport StageEnd from \"./StageEnd\";\r\nimport NotFound from \"./NotFound\";\r\n\r\n//If you're reading this then you probably aren't my sister who this site was designed for\r\n//This is just a fun little site for my sister to do some painful tasks and then send me the password for me to give her a gift card for christmas once she has completed it\r\n//If this somehow is my sister, how on earth did you know to look here?\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/ChristmasChallenge/\" exact component={ Home } />\r\n      <Route path=\"/ChristmasChallenge/stage1\" exact component={ Stage1 } />\r\n      <Route path=\"/ChristmasChallenge/youAreNotGoingToGuessTheseURLsBTW\" exact component={ Stage2 } />\r\n      <Route path=\"/ChristmasChallenge/hoorayYouMadeItToTheFinalStageWellDone\" exact component={ Stage3 } />\r\n      <Route path=\"/ChristmasChallenge/betYouWishYouWroteThatDown\" exact component={ Stage4 } />\r\n      <Route path=\"/ChristmasChallenge/hereIsThePasswordYouFilthyAnimal\" exact component={ StageEnd } />\r\n      <Route component={ NotFound } />\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Routes from './Routes'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes/>\n      </div>\n    </Router>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}